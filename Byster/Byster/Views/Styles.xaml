<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:sys="clr-namespace:System;assembly=mscorlib"
                            xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                            xmlns:lb="clr-namespace:Byster.Models.Utilities"
                            xmlns:converters="clr-namespace:Byster.Models.Utilities"
                            xmlns:viewmodels="clr-namespace:Byster.Models.ViewModels"
                            xmlns:localization="clr-namespace:Byster.Localizations.Tools">
    <converters:WordEndAssociator x:Key="wordEndAssociatorConverter"/>
    <localization:LocalizationConverter x:Key="localizationConverter"/>
    <!-- Стили UI -->
    <Style TargetType="TextBox" x:Key="tbStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="textboxBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Padding="0">
                            <Grid>
                                <TextBlock x:Name="placeholder"
                                                       Background="Transparent"
                                                       Foreground="Transparent"
                                                       Text="{TemplateBinding Tag}"
                                                       Padding="{TemplateBinding Padding}"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{TemplateBinding FontFamily}"/>
                                <ScrollViewer x:Name="PART_ContentHost"
                                                 Background="Transparent"
                                                 BorderBrush="Transparent"
                                                 Padding="{TemplateBinding Padding}"
                                                 FontFamily="{TemplateBinding FontFamily}"
                                                 FontSize="{TemplateBinding FontSize}"
                                                 Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="textboxBorder" Property="Background" Value="{DynamicResource BackgroundUIColorHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="textboxBorder" Property="Background" Value="{DynamicResource BackgroundUIColorClicked}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="placeholder" Property="Foreground" Value="{DynamicResource FontUIColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="TextBox" x:Key="referalTbStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="textboxBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Padding="0">
                            <Grid>
                                <TextBlock x:Name="placeholder"
                                           Visibility="Visible"
                                                       Background="Transparent"
                                                       Foreground="{DynamicResource FontUIColor}"
                                                       Text="{TemplateBinding Tag}"
                                                       Padding="{TemplateBinding Padding}"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{TemplateBinding FontFamily}"/>
                                <TextBlock x:Name="ContentHost"
                                            Text="{TemplateBinding Text}"
                                                 Background="Transparent"
                                                 Padding="{TemplateBinding Padding}"
                                                 FontFamily="{TemplateBinding FontFamily}"
                                                 FontSize="{TemplateBinding FontSize}"
                                                 Foreground="{TemplateBinding Foreground}"
                                                Visibility="Hidden"/>
                                <TextBlock x:Name="copyNote"
                                            Background="Transparent"
                                            Foreground="{DynamicResource FontUIColor}"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                            Text="копировать"
                                            TextDecorations="Underline"
                                            Padding="{TemplateBinding Padding}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontFamily="{TemplateBinding FontFamily}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="textboxBorder" Property="Background" Value="{DynamicResource BackgroundUIColorHover}"/>
                                <Setter TargetName="placeholder" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="ContentHost" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="textboxBorder" Property="Background" Value="{DynamicResource BackgroundUIColorClicked}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="placeholder" Property="Foreground" Value="{DynamicResource FontUIColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="PasswordBox" x:Key="pbStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="textboxBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Padding="0">
                            <Grid>
                                <TextBlock x:Name="placeholder"
                                                       Background="Transparent"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       Text="{TemplateBinding Tag}"
                                                       Padding="{TemplateBinding Padding}"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{TemplateBinding FontFamily}"/>
                                <ScrollViewer x:Name="PART_ContentHost"
                                                 Background="Transparent"
                                                 BorderBrush="Transparent"
                                                 Padding="{TemplateBinding Padding}"
                                                 FontFamily="{TemplateBinding FontFamily}"
                                                 FontSize="{TemplateBinding FontSize}"
                                                 Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="textboxBorder" Property="Background" Value="{DynamicResource BackgroundUIColorHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="textboxBorder" Property="Background" Value="{DynamicResource BackgroundUIColorClicked}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="Button" x:Key="bStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontButtonColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontButtonSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundButtonColor}"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="buttonBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                                          HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundButtonColorHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundButtonColorClicked}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource BackgroundButtonColorDisabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Hyperlink" x:Key="hlStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="#f1f7ff"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Button" x:Key="uibStyle">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="buttonBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#45808080"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#15808080"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="productButtonStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontProductButtonColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontButtonSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundProductButtonColor}"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="buttonBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                                          HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundProductButtonColorHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundProductButtonColorClicked}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="transparentButtonStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontButtonColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontButtonSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderUIButtonColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="buttonBorder"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                                          HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundUIButtonBorderColorHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundUIButtonBorderColorClicked}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ProgressBar" x:Key="prbStyle">
        <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontButtonColor}"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource CornerUIRadius}"
                                    x:Name="PART_Track">
                        <Grid>
                            <Border x:Name="PART_Indicator"
                                        BorderThickness="1"
                                        BorderBrush="{TemplateBinding Background}"
                                        Background="{DynamicResource ProgressbarGrad}"
                                        HorizontalAlignment="Left"
                                        Margin="1">
                            </Border>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}, Path=Value}"
                                               FontFamily="{DynamicResource Roboto}"
                                               FontSize="{DynamicResource FontUISize}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Foreground="{TemplateBinding Foreground}"/>
                                <TextBlock Text="%"
                                               FontFamily="{DynamicResource Roboto}"
                                               FontSize="{DynamicResource FontUISize}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="combobStyle">
        <Style.Setters>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Style="{DynamicResource combobToggleButtonStyle}"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ContentPresenter Content="{TemplateBinding SelectedItem}"
                                                    ContentTemplate="{TemplateBinding ItemTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                    Margin="10,10,30,10"
                                                    VerticalAlignment="Stretch"
                                                    HorizontalAlignment="Left"/>
                            </ToggleButton>
                            <Popup x:Name="Popup"
                                    Placement="Bottom"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    PopupAnimation="Slide"
                                   HorizontalAlignment="Stretch"
                                   Width="{TemplateBinding ActualWidth}">
                                <Grid>
                                    <Border CornerRadius="{DynamicResource CornerUIRadius}"
                                            Background="{DynamicResource BackgroundUIColor}"
                                            HorizontalAlignment="Stretch">
                                        <ScrollViewer Style="{DynamicResource scrollViewerSmallStyle}">
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource combobItemStyle}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="ToggleButton" x:Key="combobToggleButtonStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="{DynamicResource CornerUIRadius}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <Path Data="M 0 0 L 4 4 L 8 0 Z"
                                      Fill="{DynamicResource FontUIColor}"
                                      Grid.Column="1"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"/>
                                <ContentPresenter Grid.Column="0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackgroundUIColorHover}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackgroundUIColorClicked}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="ComboBoxItem" x:Key="combobItemStyle">
        <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}"
                            Padding="10"
                            HorizontalAlignment="Stretch">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundUIColorHover}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundUIColorClicked}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="infoTextBlockStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontInfoColor}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style.Setters>
    </Style>

    <Style TargetType="TextBlock" x:Key="titleTextBlockStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontTitleColor}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style.Setters>
    </Style>

    <Style TargetType="ListBox" x:Key="rotationsViewStyle">
        <Style.Setters>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <ScrollViewer Style="{DynamicResource scrollViewerStyle}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Background="{DynamicResource BackgroundMainWindowColor}">
                        </WrapPanel>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Style.Setters>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border
                                            x:Name="borderControl"
                                            Background="{TemplateBinding Background}"
                                            Margin="10">
                                            <ContentPresenter/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsVisibleInList}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border x:Name="borderItem"
                                Background="{DynamicResource BackgroundControlColor}"
                                Width="416"
                                Height="100">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" Color="{DynamicResource EffectProductItemColor}" BlurRadius="30"/>
                            </Border.Effect>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0"
                                       Source="{Binding Path=ImageUri}"
                                       VerticalAlignment="Stretch"
                                       Stretch="Uniform"
                                       RenderOptions.BitmapScalingMode="HighQuality"/>
                                <Grid Grid.Column="1" Margin="10">
                                    <TextBlock Text="Активна до:"
                                                            VerticalAlignment="Bottom"
                                                            HorizontalAlignment="Left"
                                               Style="{DynamicResource orangeTextBlockStyle}"/>
                                    <Grid VerticalAlignment="Top">
                                        <TextBlock Text="{Binding Path=Name}"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                               Style="{DynamicResource orangeTextBlockStyle}"/>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                            <!--<TextBlock Style="{DynamicResource infoTextBlockStyle}" Text="{Binding Path=Type}" VerticalAlignment="Center"/>-->
                                            <Image Source="{Binding Path=Type.ImageUri}" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Top" Height="36"/>
                                            <Image Source="{Binding Path=RotationClass.ImageUri}" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Top" Height="36" Margin="7, 0"/>
                                            <Image Source="{Binding Path=RoleOfRotation.ImageUri}" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Top" Height="36"/>
                                        </StackPanel>
                                    </Grid>
                                    
                                    <TextBlock Style="{DynamicResource infoTextBlockStyle}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Text="{Binding Path=ExpiringTime}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <Style TargetType="ListBox" x:Key="sessionsViewStyle">
        <Style.Setters>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <ScrollViewer>
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="ScrollViewer">
                                    <ScrollContentPresenter/>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"
                                    Margin="0, 3"
                                Background="Transparent"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Grid Margin="0, 5">
                                        <Image Source="{Binding Path=SessionClass.ImageUri}"
                                               Height="40"
                                               Width="40"
                                               Stretch="Uniform"
                                               x:Name="sessionImage"
                                               RenderOptions.BitmapScalingMode="HighQuality">
                                            <Image.Effect>
                                                <DropShadowEffect ShadowDepth="0" BlurRadius="15"/>
                                            </Image.Effect>
                                        </Image>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="SelectionStates">
                                                <VisualState x:Name="Selected">
                                                    <VisualState.Storyboard>
                                                        <Storyboard  Duration="0:0:0.25">
                                                            <ColorAnimation To="#FFFFFF"
                                                                             Duration="0:0:0.25"
                                                                             Storyboard.TargetName="sessionImage"
                                                                             Storyboard.TargetProperty="Effect.Color"/>
                                                        </Storyboard>
                                                    </VisualState.Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unselected">
                                                    <VisualState.Storyboard>
                                                        <Storyboard  Duration="0:0:0.25">
                                                            <ColorAnimation To="#000000"
                                                                             Duration="0:0:0.25"
                                                                             Storyboard.TargetName="sessionImage"
                                                                             Storyboard.TargetProperty="Effect.Color"/>
                                                        </Storyboard>
                                                    </VisualState.Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="TextBlock" x:Key="orangeTextBlockStyle">
        <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontOrangeColor}"/>
    </Style>

    <Style TargetType="RadioButton" x:Key="tabButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <TextBlock x:Name="textblockButton" Text="{TemplateBinding Content}" Style="{DynamicResource tabButtonTextBlockStyle}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="textblockButton" Property="VerticalAlignment" Value="Center"/>
                                <Setter TargetName="textblockButton" Property="HorizontalAlignment" Value="Center"/>
                                <Setter TargetName="textblockButton" Property="Foreground" Value="{DynamicResource FontTabButtonColorHover}"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="textblockButton" Property="VerticalAlignment" Value="Center"/>
                                <Setter TargetName="textblockButton" Property="HorizontalAlignment" Value="Center"/>
                                <Setter TargetName="textblockButton" Property="Foreground" Value="{DynamicResource FontTabButtonColorPressed}"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="textblockButton" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource EffectTabButtonColor}"
                                  BlurRadius="5"
                                  ShadowDepth="0"
                                  Direction="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="textblockButton" Property="VerticalAlignment" Value="Center"/>
                            <Setter TargetName="textblockButton" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="textblockButton" Property="Foreground" Value="{DynamicResource FontTabButtonColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="imageButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="tabButtonTextBlockStyle">
        <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontTabButtonSize}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource FontInfoColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource EffectTabButtonColor}"
                                  BlurRadius="5"
                                  ShadowDepth="0"
                                  Direction="0"/>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="ScrollViewer" x:Key="scrollViewerStyle">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0, 5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="15"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                Grid.Column="0">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"/>
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Grid.Column="1"
                                   Style="{DynamicResource scrollBarStyle}"
                                   Margin="0, 1"
                                   VerticalAlignment="Stretch">
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollViewer" x:Key="hor_scrollViewerStyle">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="8"/>
                        </Grid.RowDefinitions>
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                Grid.Column="0">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"/>
                        </Border>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Grid.Row="1"
                                   Margin="1, 0"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   Style="{DynamicResource hor_scrollBarStyle}"
                                   Orientation="Horizontal">
                        </ScrollBar>
                    </Grid>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollBar" x:Key="hor_scrollBarStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Border Background="Transparent">
                        <Track x:Name="PART_Track"
                               Orientation="Horizontal">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageLeftCommand">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="Transparent">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource thumbStyle}"
                                           Height="9">
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="Transparent">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Border>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ScrollBar" x:Key="scrollBarStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Border Background="Transparent">
                        <Track x:Name="PART_Track"
                                   IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="Transparent">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource thumbStyle}" Width="9">
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="Transparent">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollViewer" x:Key="scrollViewerSmallStyle">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="12"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                Grid.Column="0">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"/>
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Grid.Column="1"
                                   Style="{DynamicResource scrollBarSmallStyle}"
                                   Margin="0, 1"
                                   VerticalAlignment="Stretch">
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollBar" x:Key="scrollBarSmallStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Border Background="Transparent">
                        <Track x:Name="PART_Track"
                                   IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="Transparent">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource thumbStyle}"
                                           Width="5">
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="Transparent">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Thumb" x:Key="thumbStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{DynamicResource ThumbColor}"
                            CornerRadius="4"
                            x:Name="borderThumb"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderThumb" Property="Background" Value="{DynamicResource ThumbColorHover}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="borderThumb" Property="Background" Value="{DynamicResource ThumbColorClick}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="mediaViewBox">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer>
                        <i:Interaction.Behaviors>
                            <lb:UseHorizontalScroll/>
                        </i:Interaction.Behaviors>
                        <ScrollViewer.Template>
                            <ControlTemplate TargetType="ScrollViewer">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <ScrollBar Orientation="Horizontal" Grid.ColumnSpan="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                               Width="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Width}"
                                               Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Height}"
                                               x:Name="PART_HorizontalScrollBar">
                                        <ScrollBar.Template>
                                            <ControlTemplate TargetType="ScrollBar">
                                                <Grid>
                                                    <Button Style="{DynamicResource uibStyle}" HorizontalAlignment="Left" Width="20"
                                                Command="ScrollBar.PageLeftCommand"
                                                            VerticalAlignment="Stretch">
                                                        <Path Data="M 0 8 L 8 0 L 8 16 Z" Fill="{DynamicResource FontUIColor}"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <Button Style="{DynamicResource uibStyle}" HorizontalAlignment="Right" Width="20"
                                                            Command="ScrollBar.PageRightCommand"
                                                            VerticalAlignment="Stretch">
                                                        <Path Data="M 0 0 L 0 16 L 8 8 Z" Fill="{DynamicResource FontUIColor}"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"/>
                                                    </Button>
                                                </Grid>
                                            </ControlTemplate>
                                        </ScrollBar.Template>
                                    </ScrollBar>
                                    <ScrollContentPresenter Grid.Column="1"/>
                                </Grid>
                            </ControlTemplate>
                        </ScrollViewer.Template>
                        <ItemsPresenter/>
                    </ScrollViewer>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid Cursor="Hand">
                                    <viewmodels:MediaControl MediaElement="{Binding ElementName=mediaImage}" x:Name="mediaControl"/>
                                    <Image x:Name="mediaImage" Margin="5, 0" RenderOptions.BitmapScalingMode="HighQuality" Source="{Binding Path=Uri}"/>
                                    <Grid Visibility="Collapsed" x:Name="waterPlayButton" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Path Data="M 0 0 L 0 16 L 16 8 Z" Fill="{DynamicResource MediaPlayButtonColor}"/>
                                    </Grid>
                                    <Grid x:Name="mediaBackground" Margin="5, 0"/>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown">
                                            <i:InvokeCommandAction Command="{Binding ElementName=mediaControl, Path=OpenCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=Type}" Value="2">
                                        <Setter TargetName="waterPlayButton" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="mediaBackground" Property="Background" Value="#40000000"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseCaptured" Value="True">
                                        <Setter TargetName="mediaBackground" Property="Background" Value="#60000000"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="shopProductRotationsViewStyle">
        <Style.Setters>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <ScrollViewer Style="{DynamicResource scrollViewerSmallStyle}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border x:Name="borderItem"
                                            BorderBrush="{DynamicResource BorderProductItemColor}"
                                            BorderThickness="0, 1, 0, 0"
                                            Background="{TemplateBinding Background}">
                                        <Grid Height="80" x:Name="itemGrid">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="80"/>
                                                <RowDefinition/>
                                                <RowDefinition Height="23"/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="80"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Image Source="{Binding Path=ImageUri}" Grid.Column="0" Stretch="Uniform" Height="80" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <TextBlock Text="{Binding Path=Name}" Style="{DynamicResource orangeTextBlockStyle}" HorizontalAlignment="Center" Margin="0, 0, 0, 6"/>
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                        <TextBlock Text="{Binding Path=RotationClass.NameOfClass}" Style="{DynamicResource infoTextBlockStyle}" VerticalAlignment="Center"/>
                                                        <TextBlock Text="{Binding Path=SpecOfRotation.Name}" Style="{DynamicResource infoTextBlockStyle}" Margin="8, 0" VerticalAlignment="Center"/>
                                                        <Image Source="{Binding Path=Type.ImageUri}" Stretch="Uniform" Height="30" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                        <Image Source="{Binding Path=RotationClass.ImageUri}" Stretch="Uniform" Height="30" Margin="8, 0" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                        <Image Source="{Binding Path=RoleOfRotation.ImageUri}" Stretch="Uniform" Height="30" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                    </StackPanel>
                                                </StackPanel>
                                            </Grid>
                                            <Grid Grid.Row="1" Height="240" Margin="10">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="80"/>
                                                </Grid.RowDefinitions>
                                                <ScrollViewer Grid.Row="0" Style="{DynamicResource scrollViewerSmallStyle}">
                                                    <TextBlock Text="{Binding Path=Description}"
                                                                Grid.Row="0"
                                                                Style="{DynamicResource infoTextBlockStyle}"/>
                                                </ScrollViewer>
                                                <Grid Grid.Row="1">
                                                    <ListBox ItemsSource="{Binding Medias}" Style="{DynamicResource mediaViewBox}"/>
                                                </Grid>
                                            </Grid>
                                            <Grid Grid.Row="2">
                                                <Button Style="{DynamicResource uibStyle}" Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.СloseRotationList}" Height="20" VerticalAlignment="Top">
                                                    <Path Data="M 10 0 L 0 10 L 20 10 Z" Fill="{DynamicResource FontUIColor}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                </Button>
                                            </Grid>
                                            <Button Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.СloseRotationList}" Style="{DynamicResource imageButtonStyle}"
                                                    VerticalAlignment="Stretch"
                                                    HorizontalAlignment="Stretch"
                                                    IsEnabled="False"
                                                    x:Name="closeRotationPanel">
                                                <Grid Background="#01000000"/>
                                            </Button>
                                        </Grid>
                                        <VisualStateManager.VisualStateGroups>

                                            <VisualStateGroup x:Name="SelectionStates">
                                                <VisualState x:Name="Selected">
                                                    <Storyboard Duration="0:0:0.5">
                                                        <DoubleAnimation Storyboard.TargetProperty="Height"
                                                                        To="350"
                                                                        BeginTime="0:0:0"
                                                                        Duration="0:0:0.5"
                                                                        Storyboard.TargetName="itemGrid"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unselected">
                                                    <Storyboard Duration="0:0:0.5">
                                                        <DoubleAnimation Storyboard.TargetProperty="Height"
                                                                        To="80"
                                                                        BeginTime="0:0:0"
                                                                        Duration="0:0:0.5"
                                                                            Storyboard.TargetName="itemGrid"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="closeRotationPanel" Property="IsEnabled" Value="True"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition  Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsSelected" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource BackgroundProductItemColorHover}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsMouseCaptured" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource BackgroundProductItemColorClicked}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="ListBox" x:Key="filterViewStyle">
        <Setter Property="SelectionMode" Value="Multiple"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <StackPanel Orientation="Vertical" Margin="5">
                        <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=Tag}"
                                   Style="{DynamicResource infoTextBlockStyle}"
                                   HorizontalAlignment="Left"/>
                        <ItemsPresenter/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <CheckBox IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}, Mode=TwoWay}"
                                          FontFamily="{DynamicResource Roboto}"
                                          Foreground="{DynamicResource FontInfoColor}"
                                          FontSize="{DynamicResource FontUISize}"
                                          Style="{DynamicResource checkboxStyle}">
                                    <ContentPresenter/>
                                </CheckBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="bonusSlider" TargetType="Slider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding Path=UserInfo.BonusBalance}" Style="{DynamicResource infoTextBlockStyle}" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="2"/>
                        <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Slider}, Path=Maximum}" Style="{DynamicResource infoTextBlockStyle}" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="2"/>
                        <Track x:Name="PART_Track" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Background="{DynamicResource FontOrangeColor}" Height="3">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Ellipse Width="15" Height="15" Fill="{DynamicResource FontOrangeColor}" x:Name="thumbGeo" Stroke="{DynamicResource FontInfoColor}" StrokeThickness="0.5"/>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="thumbGeo" Property="Fill" Value="{DynamicResource FontOrangeColor}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseCaptured" Value="True">
                                                    <Setter TargetName="thumbGeo" Property="Fill" Value="{DynamicResource FontUIColor}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Background="{DynamicResource FontInfoColor}" Height="3">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Maximum" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="shopViewStyle">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer CanContentScroll="False" Style="{DynamicResource hor_scrollViewerStyle}">
                        <i:Interaction.Behaviors>
                            <lb:UseHorizontalScroll/>
                        </i:Interaction.Behaviors>
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Background="Transparent"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Background" Value="{DynamicResource BackgroundProductItemColor}"/>
                    
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Margin="10"
                                        Width="180"
                                        Height="379"
                                        x:Name="borderItem"
                                        Visibility="{Binding Path=IsShowingInShop}">
                                    <Border Background="{TemplateBinding Background}"
                                                        BorderThickness="1"
                                                        BorderBrush="{DynamicResource BorderProductItemColor}"
                                                        x:Name="elementBorder">
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="0" Color="{DynamicResource EffectProductItemColor}" BlurRadius="30"/>
                                        </Border.Effect>
                                        
                                        <Grid x:Name="mainElementGrid">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="180"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid Grid.Column="0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="90"/>
                                                    <RowDefinition Height="180"/>
                                                    <RowDefinition Height="110"/>
                                                </Grid.RowDefinitions>
                                                <Grid Grid.Row="0" Margin="10">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <Grid Grid.Row="0"
                                                                          x:Name="singleProductShortInfoGrid"
                                                                          Visibility="Collapsed"
                                                                          Height="30">
                                                        <Image x:Name="rotationClass" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                                           Height="30" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                        <!--<TextBlock x:Name="rotationType" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource infoTextBlockStyle}"/>-->
                                                        <Image x:Name="rotationType" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                                           Height="30" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                        <Image x:Name="rotationRole" HorizontalAlignment="Right" VerticalAlignment="Center"
                                                                           Height="30" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                    </Grid>
                                                    <Grid Grid.Row="0"
                                                                          x:Name="multipleProductShortInfoGrid"
                                                                          Visibility="Visible"
                                                                          Height="30">
                                                        <StackPanel Orientation="Horizontal"
                                                                    HorizontalAlignment="Center">
                                                            <TextBlock Style="{DynamicResource infoTextBlockStyle}" Text="{Binding Path=Product.Rotations.Count}" x:Name="rotCount"/>
                                                            <TextBlock Style="{DynamicResource infoTextBlockStyle}" Text="{Binding ElementName=rotCount, Path=Text, Converter={StaticResource wordEndAssociatorConverter}, ConverterParameter=RotationsBase}"/>
                                                        </StackPanel>
                                                    </Grid>
                                                    <TextBlock Grid.Row="1" Text="{Binding Path=Product.Name}" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource infoTextBlockStyle}" TextWrapping="WrapWithOverflow" TextAlignment="Center"/>
                                                </Grid>
                                                <Image Grid.Row="1" Source="{Binding Path=Product.ImageUri}" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                <Button Style="{DynamicResource imageButtonStyle}" Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.Shop.CloseProduct}"
                                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}"
                                                            IsEnabled="False"
                                                            VerticalAlignment="Stretch"
                                                            HorizontalAlignment="Stretch"
                                                            x:Name="closePanel"
                                                            Grid.Column="0"
                                                            Grid.RowSpan="3">
                                                    <Grid Background="#01000000"/>
                                                </Button>
                                                <Grid Grid.Row="2">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid x:Name="noninfinityDurationGrid" Grid.Row="0" Margin="10">
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                                            <TextBlock Text="{Binding Path=Product.Duration}" Style="{DynamicResource infoTextBlockStyle}"/>
                                                            <TextBlock Text=" " Style="{DynamicResource infoTextBlockStyle}"/>
                                                            <TextBlock Text="{Binding Converter={StaticResource localizationConverter}, ConverterParameter=Days}" Style="{DynamicResource infoTextBlockStyle}"/>
                                                        </StackPanel>
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                            <TextBlock Text="{Binding Path=Product.Price}" Style="{DynamicResource infoTextBlockStyle}"/>
                                                            <TextBlock Text=" " Style="{DynamicResource infoTextBlockStyle}"/>
                                                            <TextBlock Text="{Binding Path=Product.Currency}" Style="{DynamicResource infoTextBlockStyle}"/>
                                                        </StackPanel>
                                                    </Grid>
                                                    <Grid x:Name="infinityDurationGrid" Grid.Row="0" Margin="10" Visibility="Collapsed">
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                                            <TextBlock Text="Навсегда" Style="{DynamicResource infoTextBlockStyle}"/>
                                                        </StackPanel>
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                            <TextBlock Text="{Binding Path=Product.Price}" Style="{DynamicResource infoTextBlockStyle}"/>
                                                            <TextBlock Text=" " Style="{DynamicResource infoTextBlockStyle}"/>
                                                            <TextBlock Text="{Binding Path=Product.Currency}" Style="{DynamicResource infoTextBlockStyle}"/>
                                                        </StackPanel>
                                                    </Grid>
                                                    
                                                    <Grid Grid.Row="1" Margin="10">
                                                        <Grid HorizontalAlignment="Stretch" x:Name="StartControls" Visibility="Collapsed">
                                                            <Button Width="53" Style="{DynamicResource transparentButtonStyle}" x:Name="testBtn" Visibility="Collapsed" Content="{Binding Converter={StaticResource localizationConverter}, ConverterParameter=Test}" Margin="0, 0, 10, 0" HorizontalAlignment="Left" Command="{Binding TestCommand}" CommandParameter="{Binding Path=Product.Id}"/>
                                                            <Button Width="160" Style="{DynamicResource productButtonStyle}" x:Name="buyBtn" Content="{Binding Converter={StaticResource localizationConverter}, ConverterParameter=ToCart}" HorizontalAlignment="Right" Command="{Binding AddCommand}" CommandParameter="{Binding Path=Product.Id}"/>
                                                        </Grid>
                                                        <Grid HorizontalAlignment="Stretch" x:Name="CountControls">
                                                            <Button Style="{DynamicResource uibStyle}" HorizontalAlignment="Left" Command="{Binding RemoveCommand}" CommandParameter="{Binding Path=Product.Id}">
                                                                <Image Source="/Resources/Images/minus-button.png" Stretch="Uniform" Width="20" Margin="5" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                            </Button>
                                                            <TextBlock Style="{DynamicResource infoTextBlockStyle}" Text="{Binding Path=Count}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            <Button Style="{DynamicResource uibStyle}" HorizontalAlignment="Right"  Command="{Binding AddCommand}" CommandParameter="{Binding Path=Product.Id}">
                                                                <Image Source="/Resources/Images/plus-button.png" Stretch="Uniform" Width="20" Margin="5" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                            </Button>
                                                        </Grid>
                                                    </Grid>
                                                </Grid>
                                            </Grid>
                                            <Border Background="{TemplateBinding Background}"
                                                                BorderThickness="1, 0, 0, 0"
                                                                BorderBrush="{DynamicResource BorderProductItemColor}"
                                                                x:Name="expandElementBorder"
                                                                Grid.Column="1">
                                                <Grid Width="388"
                                                                Margin="10">
                                                    <Grid x:Name="singleProductExpanderGrid" Visibility="Collapsed">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="40"/>
                                                            <RowDefinition/>
                                                            <RowDefinition Height="70"/>
                                                        </Grid.RowDefinitions>
                                                        <Button Style="{DynamicResource uibStyle}" VerticalAlignment="Top" HorizontalAlignment="Right" Command="{Binding CloseCommand}" Panel.ZIndex="1">
                                                            <Path Fill="{DynamicResource FontInfoColor}" Data="M 0 4 L 8 0 L 8 8 Z" Margin="10"/>
                                                        </Button>
                                                        <StackPanel Orientation="Horizontal">
                                                            <!--<TextBlock x:Name="productTypeName" VerticalAlignment="Center" Style="{DynamicResource orangeTextBlockStyle}"
                                                                   Margin="0"/>-->
                                                            <Image x:Name="productTypeImage" Height="40"
                                                               Margin="0" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                            <Image x:Name="productClassImage" Height="40"
                                                               Margin="13, 0" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                            <TextBlock x:Name="productClassName" VerticalAlignment="Center" Style="{DynamicResource orangeTextBlockStyle}" TextAlignment="Center"
                                                                   Margin="0"/>
                                                            <Image x:Name="productRoleImage" Height="40"
                                                               Margin="13, 0" RenderOptions.BitmapScalingMode="HighQuality"/>
                                                            <TextBlock x:Name="productSpecializationName" VerticalAlignment="Center" Style="{DynamicResource orangeTextBlockStyle}" TextAlignment="Right"
                                                                   Margin="0"/>
                                                        </StackPanel>
                                                        <ScrollViewer Style="{DynamicResource scrollViewerSmallStyle}"
                                                                Grid.Row="1" Margin="0, 10">
                                                            <TextBlock Style="{DynamicResource infoTextBlockStyle}" TextWrapping="Wrap" Text="{Binding Path=Product.Description}"/>
                                                        </ScrollViewer>
                                                        <ListBox Style="{DynamicResource mediaViewBox}" ItemsSource="{Binding Path=Product.Medias}" Grid.Row="2"/>
                                                    </Grid>
                                                    <Grid x:Name="multipleProductExpanderGrid" Visibility="Visible">
                                                        <ListBox x:Name="multipleProductRotationView" ItemsSource="{Binding Path=Product.Rotations}" SelectedItem="{Binding Path=SelectedRotation, Mode=TwoWay}"
                                                                 Style="{DynamicResource shopProductRotationsViewStyle}">
                                                            <i:Interaction.Behaviors>
                                                                <lb:ScrollToViewAfterSelectionBehavior/>
                                                            </i:Interaction.Behaviors>
                                                        </ListBox>
                                                        <Button Style="{DynamicResource uibStyle}" VerticalAlignment="Top" HorizontalAlignment="Right" Command="{Binding CloseCommand}">
                                                            <Path Fill="{DynamicResource FontInfoColor}" Data="M 0 4 L 8 0 L 8 8 Z" Margin="10"/>
                                                        </Button>
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                            
                                        </Grid>
                                    </Border>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Selected">
                                                <Storyboard Duration="0:0:0.5">
                                                    <DoubleAnimation Storyboard.TargetProperty="Width"
                                                         From="{TemplateBinding ActualWidth}"
                                                         To="588"
                                                         BeginTime="0:0:0"
                                                                     Duration="0:0:0.5"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="Height"
                                                                     BeginTime="0:0:0"
                                                                     Duration="0:0:0.25"
                                                                     To="0"
                                                                     Storyboard.TargetName="singleProductShortInfoGrid"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unselected">
                                                <Storyboard Duration="0:0:0.5">

                                                    <DoubleAnimation Storyboard.TargetProperty="Width"
                                                         From="{TemplateBinding ActualWidth}"
                                                         To="180"
                                                         BeginTime="0:0:0"
                                                                     Duration="0:0:0.5"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="Height"
                                                                     BeginTime="0:0:0"
                                                                     Duration="0:0:0.5"
                                                                     To="30"
                                                                     Storyboard.TargetName="singleProductShortInfoGrid"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=Product.Duration}" Value="99999">
                                        <Setter TargetName="infinityDurationGrid" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="noninfinityDurationGrid" Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="closePanel" Property="IsEnabled" Value="True"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Path=Product.Rotations.Count}" Value="1">
                                        <Setter TargetName="rotationClass" Property="Source" Value="{Binding Path=Product.Rotations[0].RotationClass.ImageUri}"/>
                                        <Setter TargetName="rotationRole" Property="Source" Value="{Binding Path=Product.Rotations[0].RoleOfRotation.ImageUri}"/>
                                        <Setter TargetName="rotationType" Property="Source" Value="{Binding Path=Product.Rotations[0].Type.ImageUri}"/>

                                        <Setter TargetName="productTypeImage" Property="Source" Value="{Binding Path=Product.Rotations[0].Type.ImageUri}"/>
                                        <Setter TargetName="productClassImage" Property="Source" Value="{Binding Path=Product.Rotations[0].RotationClass.ImageUri}"/>
                                        <Setter TargetName="productClassName" Property="Text" Value="{Binding Path=Product.Rotations[0].RotationClass.NameOfClass}"/>
                                        <Setter TargetName="productRoleImage" Property="Source" Value="{Binding Path=Product.Rotations[0].RoleOfRotation.ImageUri}"/>
                                        <Setter TargetName="productSpecializationName" Property="Text" Value="{Binding Path=Product.Rotations[0].SpecOfRotation.Name}"/>

                                        <Setter TargetName="singleProductShortInfoGrid" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="multipleProductShortInfoGrid" Property="Visibility" Value="Collapsed"/>

                                        <Setter TargetName="singleProductExpanderGrid" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="multipleProductExpanderGrid" Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Product.IsTestable}" Value="True">
                                        <Setter TargetName="testBtn" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="buyBtn" Property="Width" Value="90"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Count}" Value="0">
                                        <Setter TargetName="CountControls" Property="Visibility" Value="Collapsed"/>
                                        <Setter TargetName="StartControls" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsSelected" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource BackgroundProductItemColorHover}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsMouseCaptured" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource BackgroundProductItemColorClicked}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="rightCheckboxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=TwoWay, Path=IsChecked}">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border Background="Transparent">
                                    <ContentPresenter/>
                                </Border>
                            </ControlTemplate>
                        </ToggleButton.Template>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="12"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" Margin="0,0,4,0"/>
                            <Grid Grid.Column="1">
                                <Border BorderBrush="{DynamicResource CheckboxColor}" Width="11" Height="11"
                                                            BorderThickness="1"
                                                            VerticalAlignment="Center"
                                        CornerRadius="2"
                                        HorizontalAlignment="Center"
                                        x:Name="borderItem">
                                    <Border Background="{DynamicResource CheckboxColor}"
                                            Visibility="Collapsed" x:Name="CheckPart"
                                            Margin="2"
                                            CornerRadius="1"
                                            VerticalAlignment="Stretch"
                                            HorizontalAlignment="Stretch"/>
                                </Border>
                            </Grid>
                        </Grid>
                    </ToggleButton>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckPart" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckPart" Property="Background" Value="{DynamicResource CheckboxColorHover}"/>
                            <Setter TargetName="borderItem" Property="BorderBrush" Value="{DynamicResource CheckboxColorHover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckPart" Property="Background" Value="{DynamicResource CheckboxColorDisabled}"/>
                            <Setter TargetName="borderItem" Property="BorderBrush" Value="{DynamicResource CheckboxColorDisabled}"/>
                            <Setter Property="Foreground" Value="{DynamicResource CheckboxTextColorDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="checkboxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=TwoWay, Path=IsChecked}">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border Background="Transparent">
                                    <ContentPresenter/>
                                </Border>
                            </ControlTemplate>
                        </ToggleButton.Template>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0">
                                <Border BorderBrush="{DynamicResource CheckboxColor}" Width="11" Height="11"
                                                            BorderThickness="1"
                                                            VerticalAlignment="Center"
                                        CornerRadius="2"
                                        HorizontalAlignment="Center"
                                        x:Name="borderItem">
                                    <Border Background="{DynamicResource CheckboxColor}"
                                            Visibility="Collapsed" x:Name="CheckPart"
                                            Margin="2"
                                            CornerRadius="1"
                                            VerticalAlignment="Stretch"
                                            HorizontalAlignment="Stretch"/>
                                </Border>
                            </Grid>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"/>
                        </Grid>
                    </ToggleButton>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckPart" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckPart" Property="Background" Value="{DynamicResource CheckboxColorHover}"/>
                            <Setter TargetName="borderItem" Property="BorderBrush" Value="{DynamicResource CheckboxColorHover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckPart" Property="Background" Value="{DynamicResource CheckboxColorDisabled}"/>
                            <Setter TargetName="borderItem" Property="BorderBrush" Value="{DynamicResource CheckboxColorDisabled}"/>
                            <Setter Property="Foreground" Value="{DynamicResource CheckboxTextColorDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="bonusSliderReworked" TargetType="Slider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="2">
                            <Image/>
                            <TextBlock FontSize="20" Text="{Binding RelativeSource={RelativeSource AncestorType=Slider}, Path=Minimum}" Style="{DynamicResource infoTextBlockStyle}"/>
                        </StackPanel>
                        <TextBlock FontSize="20" Text="{Binding RelativeSource={RelativeSource AncestorType=Slider}, Path=Maximum}" Style="{DynamicResource infoTextBlockStyle}" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="2"/>
                        <Track x:Name="PART_Track" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Background="{DynamicResource SliderTrackColor}" Height="3">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Ellipse Width="15" Height="15" Fill="{DynamicResource SliderThumbColor}" x:Name="thumbGeo" StrokeThickness="0.5"/>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="thumbGeo" Property="Fill" Value="{DynamicResource SliderThumbColorHover}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseCaptured" Value="True">
                                                    <Setter TargetName="thumbGeo" Property="Fill" Value="{DynamicResource SliderThumbColorClicked}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Background="{DynamicResource SliderTrackColor}" Height="3">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}"
                                                    Height="{TemplateBinding Height}">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="cartProductsView" TargetType="ListBox">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Background="Transparent" Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer Style="{DynamicResource scrollViewerSmallStyle}">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid Background="{DynamicResource BackgroundFieldPaymentWindow}" Margin="0, 5" Height="70">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="70"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="{Binding Product.ImageUri}" Grid.Column="0"/>
                                    <Grid Grid.Column="1">
                                        <Grid Margin="10">
                                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Left" Style="{DynamicResource orangeTextBlockStyle}" Text="{Binding Product.Name}"/>
                                            <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Orientation="Horizontal">
                                                <TextBlock Style="{DynamicResource infoTextBlockStyle}" Text="{Binding Price}"/>
                                                <TextBlock Style="{DynamicResource infoTextBlockStyle}" Text=" "/>
                                                <TextBlock Style="{DynamicResource infoTextBlockStyle}" Text="{Binding Product.Currency}"/>
                                            </StackPanel>
                                        </Grid>
                                    </Grid>
                                    <Button Grid.ColumnSpan="2" Command="{Binding RemoveAllCommand}" CommandParameter="{Binding Product.Id}">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Grid Background="#00000000">
                                                    <Image x:Name="crossImage" Visibility="Collapsed" Source="/Resources/Images/close-button-image.png" Height="20"
                                                           VerticalAlignment="Top" HorizontalAlignment="Right" Stretch="Uniform" Margin="4"/>
                                                        <ContentPresenter/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="crossImage" Property="Visibility" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseCaptured" Value="True">
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>

                                </Grid>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Price}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="darkCombobStyle">
        <Style.Setters>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Style="{DynamicResource darkCombobToggleButtonStyle}"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ContentPresenter Content="{TemplateBinding SelectedItem}"
                                                    ContentTemplate="{TemplateBinding ItemTemplate}"
                                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                    Margin="10,10,30,10"
                                                    VerticalAlignment="Stretch"
                                                    HorizontalAlignment="Left"/>
                            </ToggleButton>
                            <Popup x:Name="Popup"
                                    Placement="Bottom"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    PopupAnimation="Slide"
                                   HorizontalAlignment="Stretch"
                                   Width="{TemplateBinding ActualWidth}">
                                <Grid>
                                    <Border CornerRadius="{DynamicResource CornerUIRadius}"
                                            Background="{DynamicResource BackgroundFieldPaymentWindow}"
                                            HorizontalAlignment="Stretch">
                                        <ScrollViewer Style="{DynamicResource scrollViewerSmallStyle}">
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource darkCombobItemStyle}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="ToggleButton" x:Key="darkCombobToggleButtonStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundFieldPaymentWindow}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="{DynamicResource CornerUIRadius}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <Path Data="M 0 0 L 4 4 L 8 0 Z"
                                      Fill="{DynamicResource FontUIColor}"
                                      Grid.Column="1"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"/>
                                <ContentPresenter Grid.Column="0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackgroundFieldPaymentWindowHover}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackgroundFieldPaymentWindowClicked}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="ComboBoxItem" x:Key="darkCombobItemStyle">
        <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundFieldPaymentWindow}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}"
                            Padding="10"
                            HorizontalAlignment="Stretch">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundFieldPaymentWindowHover}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundFieldPaymentWindowClicked}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Параметры для генерации стилей UI -->
    <!-- Цвета -->
    <SolidColorBrush x:Key="BackgroundUIColor">#323339</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundUIColorHover">#242529</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundUIColorClicked">#2b2c30</SolidColorBrush>
    <SolidColorBrush x:Key="BorderUIButtonColor">#a0a6b4</SolidColorBrush>

    <SolidColorBrush x:Key="FontUIColor">#6e6e75</SolidColorBrush>
    <SolidColorBrush x:Key="FontButtonColor">#f1f7ff</SolidColorBrush>
    <SolidColorBrush x:Key="FontTabButtonColor">#f1f7ff</SolidColorBrush>
    <SolidColorBrush x:Key="FontTabButtonColorPressed">#B8BCC1</SolidColorBrush>
    <SolidColorBrush x:Key="FontTabButtonColorHover">#CDD1D6</SolidColorBrush>
    <Color x:Key="EffectTabButtonColor">#f1f7ff</Color>
    <SolidColorBrush x:Key="FontInfoColor">#9fa4b2</SolidColorBrush>
    <SolidColorBrush x:Key="FontTitleColor">#ffffff</SolidColorBrush>
    <SolidColorBrush x:Key="FontOrangeColor">#fbb94b</SolidColorBrush>
    <SolidColorBrush x:Key="FontDarkOrangeColor">#bf8c26</SolidColorBrush>

    <SolidColorBrush x:Key="BackgroundButtonColor">#497f46</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundButtonColorHover">#3d6b3b</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundButtonColorClicked">#437541</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundButtonColorDisabled">#676b74</SolidColorBrush>
    

    <SolidColorBrush x:Key="MediaPlayButtonColor">#a0aaaaaa</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundMainWindowColor">#34373e</SolidColorBrush>
    <SolidColorBrush x:Key="BorderMainWindowColor">#676b74</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundControlColor">#2d2e33</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundWindowColor">#202124</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundWindowDarkColor">#202124</SolidColorBrush>
    
    <SolidColorBrush x:Key="ThumbColor">#9fa4b2</SolidColorBrush>
    <SolidColorBrush x:Key="ThumbColorHover">#60656e</SolidColorBrush>
    <SolidColorBrush x:Key="ThumbColorClick">#676c75</SolidColorBrush>

    <SolidColorBrush x:Key="BackgroundProductItemColor">#202124</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundProductItemColorHover">#17171a</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundProductItemColorClicked">#1b1c1f</SolidColorBrush>
    <Color x:Key="EffectProductItemColor">#282a2f</Color>

    <SolidColorBrush x:Key="BorderProductItemColor">#454649</SolidColorBrush>
    
    <SolidColorBrush x:Key="BackgroundProductButtonColor">#fbb94b</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundProductButtonColorHover">#f0af48</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundProductButtonColorClicked">#f5b349</SolidColorBrush>

    <SolidColorBrush x:Key="FontProductButtonColor">#292a2e</SolidColorBrush>

    <SolidColorBrush x:Key="BackgroundUIButtonBorderColorHover">#10ffffff</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundUIButtonBorderColorClicked">#20ffffff</SolidColorBrush>

    <SolidColorBrush x:Key="CheckboxColor">#FEBA32</SolidColorBrush>
    <SolidColorBrush x:Key="CheckboxColorHover">#FFDA83</SolidColorBrush>
    <SolidColorBrush x:Key="CheckboxColorDisabled">#676A73</SolidColorBrush>
    <SolidColorBrush x:Key="CheckboxTextColorDisabled">#676A73</SolidColorBrush>

    <SolidColorBrush x:Key="SliderTrackColor">#4C4F57</SolidColorBrush>
    <SolidColorBrush x:Key="SliderThumbColor">#A5ABB9</SolidColorBrush>
    <SolidColorBrush x:Key="SliderThumbColorHover">#8D919B</SolidColorBrush>
    <SolidColorBrush x:Key="SliderThumbColorClicked">#999EAA</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundPaymentWindow">#292A2E</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundFieldPaymentWindow">#202124</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundFieldPaymentWindowClicked">#18191C</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundFieldPaymentWindowHover">#0F0F11</SolidColorBrush>
    <SolidColorBrush x:Key="HyperlinkPaymentWindowColor">#6E727C</SolidColorBrush>

    <LinearGradientBrush x:Key="ProgressbarGrad" StartPoint="0, 0" EndPoint="1, 0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#788e47" Offset="0.0"/>
            <GradientStop Color="#497f46" Offset="1.0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <Color x:Key="sessionStartEffectColor">#fff1f7ff</Color>
    <Color x:Key="sessionSelectedEffectColor">#fffbb94b</Color>
    <!-- Шрифты -->
    <FontFamily x:Key="Roboto">../Resources/Fonts/Roboto-Regular.ttf</FontFamily>

    <!-- Закругления -->
    <CornerRadius x:Key="CornerUIRadius">1.5</CornerRadius>

    <!-- Размеры шрифтов -->
    <sys:Double x:Key="FontUISize">15.0</sys:Double>
            <sys:Double x:Key="FontButtonSize">15.0</sys:Double>
            <sys:Double x:Key="FontTabButtonSize">25.0</sys:Double>

            <!---->
    <Thickness x:Key="PaddingUI">10</Thickness>
</ResourceDictionary>