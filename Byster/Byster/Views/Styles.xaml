<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                            xmlns:sys="clr-namespace:System;assembly=mscorlib"
                            x:Class="Byster.Utilities.BysterEventHandlers">

    <!-- Стили UI -->
    <Style TargetType="TextBox" x:Key="tbStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="textboxBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Padding="0">
                            <Grid>
                                <TextBlock x:Name="placeholder"
                                                       Background="Transparent"
                                                       Foreground="Transparent"
                                                       Text="{TemplateBinding Tag}"
                                                       Padding="{TemplateBinding Padding}"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{TemplateBinding FontFamily}"/>
                                <ScrollViewer x:Name="PART_ContentHost"
                                                 Background="Transparent"
                                                 BorderBrush="Transparent"
                                                 Padding="{TemplateBinding Padding}"
                                                 FontFamily="{TemplateBinding FontFamily}"
                                                 FontSize="{TemplateBinding FontSize}"
                                                 Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="textboxBorder" Property="Background" Value="{DynamicResource BackgroundUIColorHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="textboxBorder" Property="Background" Value="{DynamicResource BackgroundUIColorClicked}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="placeholder" Property="Foreground" Value="{DynamicResource FontUIColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="PasswordBox" x:Key="pbStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="textboxBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Padding="0">
                            <Grid>
                                <TextBlock x:Name="placeholder"
                                                       Background="Transparent"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       Text="{TemplateBinding Tag}"
                                                       Padding="{TemplateBinding Padding}"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontFamily="{TemplateBinding FontFamily}"/>
                                <ScrollViewer x:Name="PART_ContentHost"
                                                 Background="Transparent"
                                                 BorderBrush="Transparent"
                                                 Padding="{TemplateBinding Padding}"
                                                 FontFamily="{TemplateBinding FontFamily}"
                                                 FontSize="{TemplateBinding FontSize}"
                                                 Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="textboxBorder" Property="Background" Value="{DynamicResource BackgroundUIColorHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="textboxBorder" Property="Background" Value="{DynamicResource BackgroundUIColorClicked}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="Button" x:Key="bStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontButtonColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontButtonSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundButtonColor}"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="buttonBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                                          HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundButtonColorHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundButtonColorClicked}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Hyperlink" x:Key="hlStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="#f1f7ff"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Button" x:Key="uibStyle">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="buttonBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#2d2f33"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#27282b"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="productButtonStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontProductButtonColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontButtonSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundProductButtonColor}"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="buttonBorder"
                                            BorderBrush="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                                          HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundProductButtonColorHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundProductButtonColorClicked}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="transparentButtonStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontButtonColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontButtonSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="{DynamicResource PaddingUI}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderUIButtonColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="buttonBorder"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            CornerRadius="{DynamicResource CornerUIRadius}"
                                            Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                                          HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundUIButtonBorderColorHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundUIButtonBorderColorClicked}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ProgressBar" x:Key="prbStyle">
        <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontButtonColor}"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource CornerUIRadius}"
                                    x:Name="PART_Track">
                        <Grid>
                            <Border x:Name="PART_Indicator"
                                        BorderThickness="1"
                                        BorderBrush="{TemplateBinding Background}"
                                        Background="{DynamicResource ProgressbarGrad}"
                                        HorizontalAlignment="Left"
                                        Margin="1">
                            </Border>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}, Path=Value}"
                                               FontFamily="{DynamicResource Roboto}"
                                               FontSize="{DynamicResource FontUISize}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Foreground="{TemplateBinding Foreground}"/>
                                <TextBlock Text="%"
                                               FontFamily="{DynamicResource Roboto}"
                                               FontSize="{DynamicResource FontUISize}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="combobStyle">
        <Style.Setters>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Style="{DynamicResource combobToggleButtonStyle}"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                            <ContentPresenter Content="{TemplateBinding SelectedItem}"
                            ContentTemplate="{TemplateBinding ItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,10,30,10"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left"/>
                            <Popup x:Name="Popup"
                                    Placement="Bottom"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    PopupAnimation="Slide"
                                   HorizontalAlignment="Stretch"
                                   Width="{TemplateBinding ActualWidth}">
                                <Grid>
                                    <Border CornerRadius="{DynamicResource CornerUIRadius}"
                                            Background="{DynamicResource BackgroundUIColor}"
                                            HorizontalAlignment="Stretch">
                                        <StackPanel IsItemsHost="True"/>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource combobItemStyle}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="ToggleButton" x:Key="combobToggleButtonStyle">
        <Style.Setters>
            <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="{DynamicResource CornerUIRadius}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <Path Data="M 0 0 L 4 4 L 8 0 Z"
                                      Fill="{DynamicResource FontUIColor}"
                                      Grid.Column="1"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackgroundUIColorHover}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BackgroundUIColorClicked}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="ComboBoxItem" x:Key="combobItemStyle">
        <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontUIColor}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundUIColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}"
                            Padding="10"
                            HorizontalAlignment="Stretch">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundUIColorHover}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundUIColorClicked}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="infoTextBlockStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontInfoColor}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style.Setters>
    </Style>

    <Style TargetType="TextBlock" x:Key="titleTextBlockStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource FontTitleColor}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style.Setters>
    </Style>

    <Style TargetType="ListBox" x:Key="rotationsViewStyle">
        <Style.Setters>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <ScrollViewer Style="{DynamicResource scrollViewerStyle}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Background="{DynamicResource BackgroundMainWindowColor}">
                        </WrapPanel>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Style.Setters>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border
                                            x:Name="borderControl"
                                            Background="{TemplateBinding Background}"
                                            Margin="10">
                                            <ContentPresenter/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border x:Name="borderItem"
                                Background="{DynamicResource BackgroundControlColor}"
                                Width="416"
                                Height="100">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0"
                                       Source="{Binding Path=ImageUri}"
                                       VerticalAlignment="Stretch"
                                       Stretch="Uniform"/>
                                <Grid Grid.Column="1" Margin="10">
                                    <TextBlock Text="Активна до:"
                                                            VerticalAlignment="Bottom"
                                                            HorizontalAlignment="Left"
                                               Style="{DynamicResource orangeTextBlockStyle}"/>
                                    <TextBlock Text="{Binding Path=Name}"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Top"
                                               Style="{DynamicResource orangeTextBlockStyle}"/>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <TextBlock Style="{DynamicResource infoTextBlockStyle}" Text="{Binding Path=Type}" VerticalAlignment="Center"/>
                                        <Image Source="{Binding Path=RotationClass.ImageUri}" VerticalAlignment="Top" Height="36" Margin="7, 0"/>
                                        <Image Source="{Binding Path=RoleOfRotation.ImageUri}" VerticalAlignment="Top" Height="36"/>
                                    </StackPanel>
                                    <TextBlock Style="{DynamicResource infoTextBlockStyle}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Text="{Binding Path=ExpiringTime}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <Style TargetType="ListBox" x:Key="sessionsViewStyle">
        <Style.Setters>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <ScrollViewer Style="{DynamicResource scrollViewerSmallStyle}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"
                                    Margin="0, 3"
                                Background="Transparent"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Grid Margin="0, 5">
                                        <Image Source="{Binding Path=SessionClass.ImageUri}"
                                               Height="40"
                                               Width="40"
                                               Stretch="Uniform"
                                               x:Name="sessionImage">
                                            <Image.Effect>
                                                <DropShadowEffect ShadowDepth="0" Color="{DynamicResource sessionStartEffectColor}" BlurRadius="6"/>
                                            </Image.Effect>
                                        </Image>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="SelectionStates">
                                                <VisualState x:Name="Selected">
                                                    <VisualState.Storyboard>
                                                        <Storyboard  Duration="0:0:0.25">
                                                            <DoubleAnimation To="15"
                                                                             Duration="0:0:0.25"
                                                                             Storyboard.TargetName="sessionImage"
                                                                             Storyboard.TargetProperty="Effect.BlurRadius"/>
                                                        </Storyboard>
                                                    </VisualState.Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unselected">
                                                    <VisualState.Storyboard>
                                                        <Storyboard  Duration="0:0:0.25">
                                                            <DoubleAnimation To="6"
                                                                             Duration="0:0:0.25"
                                                                             Storyboard.TargetName="sessionImage"
                                                                             Storyboard.TargetProperty="Effect.BlurRadius"/>
                                                        </Storyboard>
                                                    </VisualState.Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="TextBlock" x:Key="orangeTextBlockStyle">
        <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontUISize}"/>
        <Setter Property="Foreground" Value="{DynamicResource FontOrangeColor}"/>
    </Style>

    <Style TargetType="RadioButton" x:Key="tabButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <TextBlock x:Name="textblockButton" Text="{TemplateBinding Content}" Style="{DynamicResource tabButtonTextBlockStyle}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="textblockButton" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{DynamicResource EffectTabButtonColor}"
                                  BlurRadius="5"
                                  ShadowDepth="0"
                                  Direction="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="textblockButton" Property="VerticalAlignment" Value="Center"/>
                            <Setter TargetName="textblockButton" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="textblockButton" Property="Foreground" Value="{DynamicResource FontTabButtonColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="imageButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="tabButtonTextBlockStyle">
        <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontTabButtonSize}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource FontInfoColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource EffectTabButtonColor}"
                                  BlurRadius="5"
                                  ShadowDepth="0"
                                  Direction="0"/>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="ScrollViewer" x:Key="scrollViewerStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="18"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                Grid.Column="0">
                            <ScrollContentPresenter/>
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Grid.Column="1"
                                   Style="{DynamicResource scrollBarStyle}"
                                   
                                   ViewportSize="{TemplateBinding ViewportHeight}">
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollBar" x:Key="scrollBarStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Border Background="Transparent">
                            <Track x:Name="PART_Track"
                                   IsDirectionReversed="True"
                                   VerticalAlignment="Stretch">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource thumbStyle}"
                                           Width="7"
                                           Height="40">
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollViewer" x:Key="scrollViewerSmallStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="12"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="Transparent"
                                BorderBrush="Transparent"
                                Grid.Column="0">
                            <ScrollContentPresenter/>
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="20"
                                   Grid.Column="1"
                                   Style="{DynamicResource scrollBarSmallStyle}"
                                   Margin="0, 1">
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollBar" x:Key="scrollBarSmallStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Border Background="Transparent">
                            <Track x:Name="PART_Track"
                                   IsDirectionReversed="True">
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource thumbStyle}"
                                           Width="5"
                                           Height="{TemplateBinding ViewportSize}">
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Thumb" x:Key="thumbStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{DynamicResource ThumbColor}"
                            CornerRadius="4"
                            Height="{TemplateBinding Height}"
                            x:Name="borderThumb"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderThumb" Property="Background" Value="{DynamicResource ThumbColorHover}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="borderThumb" Property="Background" Value="{DynamicResource ThumbColorClick}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="mediaViewBox">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer>
                        <ScrollViewer.Template>
                            <ControlTemplate TargetType="ScrollViewer">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <ScrollBar Orientation="Horizontal" Grid.ColumnSpan="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                               Width="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Width}"
                                               Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=Height}"
                                               x:Name="PART_HorizontalScrollBar">
                                        <ScrollBar.Template>
                                            <ControlTemplate TargetType="ScrollBar">
                                                <Grid>
                                                    <Button Style="{DynamicResource uibStyle}" HorizontalAlignment="Left" Width="20"
                                                Command="ScrollBar.PageLeftCommand"
                                                            VerticalAlignment="Stretch">
                                                        <Path Data="M 0 8 L 8 0 L 8 16 Z" Fill="{DynamicResource FontUIColor}"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"/>
                                                    </Button>
                                                    <Button Style="{DynamicResource uibStyle}" HorizontalAlignment="Right" Width="20"
                                                            Command="ScrollBar.PageRightCommand"
                                                            VerticalAlignment="Stretch">
                                                        <Path Data="M 0 0 L 0 16 L 8 8 Z" Fill="{DynamicResource FontUIColor}"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"/>
                                                    </Button>
                                                </Grid>
                                            </ControlTemplate>
                                        </ScrollBar.Template>
                                    </ScrollBar>
                                    <ScrollContentPresenter Grid.Column="1"/>
                                </Grid>
                            </ControlTemplate>
                        </ScrollViewer.Template>
                        <ItemsPresenter/>
                    </ScrollViewer>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Image x:Name="mediaImage" Margin="5, 0"/>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=Type}" Value="1">
                                        <Setter TargetName="mediaImage" Property="Source" Value="{Binding Path=Uri}"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="shopProductRotationsViewStyle">
        <Style.Setters>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ScrollViewer Style="{DynamicResource scrollViewerSmallStyle}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="50"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Image Source="{Binding Path=ImageUri}" Stretch="Uniform" Height="50" Grid.Column="0"/>
                                                <Grid Grid.Column="1">
                                                    <TextBlock Text="Text"/>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="ListBox" x:Key="filterViewStyle">
        <Setter Property="SelectionMode" Value="Multiple"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <StackPanel Orientation="Vertical" Margin="5">
                        <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=Tag}"
                                   Style="{DynamicResource orangeTextBlockStyle}"
                                   HorizontalAlignment="Left"/>
                        <ItemsPresenter/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <CheckBox IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}, Mode=TwoWay}"
                                          FontFamily="{DynamicResource Roboto}"
                                          Foreground="{DynamicResource FontOrangeColor}"
                                          FontSize="{DynamicResource FontUISize}">
                                    <ContentPresenter/>
                                    <CheckBox.Template>
                                        <ControlTemplate TargetType="CheckBox">
                                            <Grid Margin="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="12"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0">
                                                    <Border BorderBrush="{DynamicResource FontOrangeColor}" Width="10" Height="10"
                                                            BorderThickness="1"
                                                            Margin="0, 0, 2, 0">
                                                        <Path Data="M 0 3 L 3 8 L 8 0" Stroke="{DynamicResource FontOrangeColor}" Visibility="Collapsed" x:Name="CheckPart"/>
                                                    </Border>
                                                </Grid>
                                                <ContentPresenter Grid.Column="1"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="CheckPart" Property="Visibility" Value="Visible"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </CheckBox.Template>
                                </CheckBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Параметры для генерации стилей UI -->
    <!-- Цвета -->
    <SolidColorBrush x:Key="BackgroundUIColor">#323339</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundUIColorHover">#242529</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundUIColorClicked">#2b2c30</SolidColorBrush>
    <SolidColorBrush x:Key="BorderUIButtonColor">#a0a6b4</SolidColorBrush>

    <SolidColorBrush x:Key="FontUIColor">#6e6e75</SolidColorBrush>
    <SolidColorBrush x:Key="FontButtonColor">#f1f7ff</SolidColorBrush>
    <SolidColorBrush x:Key="FontTabButtonColor">#f1f7ff</SolidColorBrush>
    <Color x:Key="EffectTabButtonColor">#f1f7ff</Color>
    <SolidColorBrush x:Key="FontInfoColor">#9fa4b2</SolidColorBrush>
    <SolidColorBrush x:Key="FontTitleColor">#ffffff</SolidColorBrush>
    <SolidColorBrush x:Key="FontOrangeColor">#fbb94b</SolidColorBrush>
    
    <SolidColorBrush x:Key="BackgroundButtonColor">#497f46</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundButtonColorHover">#3d6b3b</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundButtonColorClicked">#437541</SolidColorBrush>

    <SolidColorBrush x:Key="BackgroundMainWindowColor">#34373e</SolidColorBrush>
    <SolidColorBrush x:Key="BorderMainWindowColor">#676b74</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundControlColor">#2d2e33</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundWindowColor">#202124</SolidColorBrush>

    <SolidColorBrush x:Key="ThumbColor">#9fa4b2</SolidColorBrush>
    <SolidColorBrush x:Key="ThumbColorHover">#242529</SolidColorBrush>
    <SolidColorBrush x:Key="ThumbColorClick">#2b2c30</SolidColorBrush>

    <SolidColorBrush x:Key="BackgroundProductItemColor">#202124</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundProductItemColorHover">#17171a</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundProductItemColorClicked">#1b1c1f</SolidColorBrush>
    <Color x:Key="EffectProductItemColor">#282a2f</Color>

    <SolidColorBrush x:Key="BorderProductItemColor">#454649</SolidColorBrush>

    <SolidColorBrush x:Key="BackgroundProductButtonColor">#fbb94b</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundProductButtonColorHover">#f0af48</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundProductButtonColorClicked">#f5b349</SolidColorBrush>

    <SolidColorBrush x:Key="FontProductButtonColor">#292a2e</SolidColorBrush>

    <SolidColorBrush x:Key="BackgroundUIButtonBorderColorHover">#10ffffff</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundUIButtonBorderColorClicked">#20ffffff</SolidColorBrush>

    <LinearGradientBrush x:Key="ProgressbarGrad" StartPoint="0, 0" EndPoint="1, 0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#788e47" Offset="0.0"/>
            <GradientStop Color="#497f46" Offset="1.0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <Color x:Key="sessionStartEffectColor">#fff1f7ff</Color>
    <Color x:Key="sessionSelectedEffectColor">#fffbb94b</Color>
    <!-- Шрифты -->
    <FontFamily x:Key="Roboto">../Resources/Fonts/Roboto-Regular.ttf</FontFamily>

    <!-- Закругления -->
    <CornerRadius x:Key="CornerUIRadius">1.5</CornerRadius>

    <!-- Размеры шрифтов -->
    <sys:Double x:Key="FontUISize">15.0</sys:Double>
            <sys:Double x:Key="FontButtonSize">15.0</sys:Double>
            <sys:Double x:Key="FontTabButtonSize">25.0</sys:Double>

            <!---->
    <Thickness x:Key="PaddingUI">10</Thickness>
</ResourceDictionary>